import static org.gradle.internal.os.OperatingSystem.*

buildscript {

    ext{
        kotlin = 'org.jetbrains.kotlin:kotlin'
        kotlin_version = '1.3.21'
        kotlintest_version = "3.2.1"
    }

    repositories {
        jcenter()   // shadow
        mavenCentral()
        maven { setUrl("https://oss.sonatype.org/content/repositories/snapshots/") }
    }

    dependencies {
        classpath "$kotlin-gradle-plugin:$kotlin_version".toString()
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.2.0"
    }
}

plugins {
    id 'kotlin-multiplatform' version '1.3.21' apply false
}

ext{
    moduleName = 'com.github.kotlin_graphics.glm'
    unsigned_version = "0e3cc3ec155986f2100fee03cc143cbd3dfd0d84"
    kool_version = "98ffadafd81f8d69b21bf374f54f83a8e1e539f2"
    lwjgl_version = "3.2.2-SNAPSHOT"
    lwjgl_natives = current() == WINDOWS ? "windows" : current() == LINUX ? "linux" : "macos"
}

subprojects {

    apply plugin: 'com.github.johnrengelman.shadow'

    // jitpack
    apply plugin: 'maven'
    group = 'com.github.kotlin-graphics'

    repositories {
        mavenCentral()
        maven { setUrl("https://oss.sonatype.org/content/repositories/snapshots/") }
        maven { setUrl("https://jitpack.io") }
    }

//    task sourcesJar(type: Jar, dependsOn: classes) {
//        archiveClassifier = 'sources'
//        from sourceSets.main.allSource
//    }

//    task javadocJar(type: Jar, dependsOn: javadoc) {
//        archiveClassifier = 'javadoc'
//        from javadoc.destinationDir
//    }

//    artifacts {
//        archives sourcesJar
//        archives javadocJar
//    }

//    jar {
//        inputs.property("moduleName", moduleName)
//        manifest.attributes('Automatic-Module-Name': moduleName)
//    }
}

project(":glm") {
    apply plugin: 'kotlin-multiplatform'
    
    kotlin {
        jvm() {
            compilations.main {
                defaultSourceSet {
                    kotlin.srcDir("src/main/kotlin")
                    resources.srcDir("src/main/resources")
                    
                    dependencies {
                        implementation kotlin("stdlib-jdk8")

                        api "com.github.kotlin-graphics:kotlin-unsigned:$unsigned_version".toString()
                        api "com.github.kotlin-graphics:kool:$kool_version".toString()

                        ["", "-glfw", "-jemalloc", "-openal", "-opengl", "-stb"].each {
                            implementation "org.lwjgl:lwjgl$it:$lwjgl_version"
                            implementation "org.lwjgl:lwjgl$it:$lwjgl_version:natives-$lwjgl_natives"
                        }
                    }
                }
            }
            compilations.test {
                defaultSourceSet {
                    kotlin.srcDir("src/test/kotlin")
                    resources.srcDir("src/test/resources")
                    
                    dependencies {
                        implementation kotlin("test")
                        implementation kotlin("test-junit")

                        implementation project(":glm-test")

                        implementation "io.kotlintest:kotlintest-runner-junit5:$kotlintest_version".toString()
                    }
                }
            }
        }
    }

//    shadowJar.archiveClassifier = 'all'
}

project(":glm-test") {
    apply plugin: 'kotlin'

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib"

        testImplementation "io.kotlintest:kotlintest-runner-junit5:$kotlintest_version".toString()

        implementation project(":glm")

        implementation "io.kotlintest:kotlintest-core:$kotlintest_version".toString()
        implementation "io.kotlintest:kotlintest-assertions:$kotlintest_version".toString()
    }
}