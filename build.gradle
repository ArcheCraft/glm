import static org.gradle.internal.os.OperatingSystem.*

buildscript {

    ext{
        kotlin = 'org.jetbrains.kotlin:kotlin'
        kotlin_version = '1.3.31'
        kotlintest_version = "3.2.1"
    }

    repositories {
        jcenter()   // shadow
        mavenCentral()
        maven { setUrl("https://oss.sonatype.org/content/repositories/snapshots/") }
    }

    dependencies {
        classpath "$kotlin-gradle-plugin:$kotlin_version".toString()
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.2.0"
    }
}

ext{
    moduleName = 'com.github.kotlin_graphics.glm'
    unsigned_version = "411900ade7338489412bfbe12a45699dd100a3eb"
    kool_version = "dc615138a7eea2938516a902d0dab83a010d195b"
    lwjgl_version = "3.2.2"
    lwjgl_natives = current() == WINDOWS ? "windows" : current() == LINUX ? "linux" : "macos"
}

subprojects {

    apply plugin: 'kotlin'
    apply plugin: 'com.github.johnrengelman.shadow'

    // jitpack
    apply plugin: 'maven'
    group = 'com.github.kotlin-graphics'

    repositories {
        mavenCentral()
        maven { setUrl("https://oss.sonatype.org/content/repositories/snapshots/") }
        maven { setUrl("https://jitpack.io") }
    }

    dependencies {

        implementation "org.jetbrains.kotlin:kotlin-stdlib"

        testImplementation "io.kotlintest:kotlintest-runner-junit5:$kotlintest_version".toString()
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier.set('sources')
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        archiveClassifier.set('javadoc')
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    jar {
        inputs.property("moduleName", moduleName)
        manifest.attributes('Automatic-Module-Name': moduleName)
    }
}

project(":glm") {

    apply plugin: 'java-library'

    dependencies {

        api "com.github.kotlin-graphics:kotlin-unsigned:$unsigned_version".toString()
        api "com.github.kotlin-graphics:kool:$kool_version".toString()

        testImplementation project(":glm-test")

        testImplementation "io.kotlintest:kotlintest-runner-junit5:$kotlintest_version".toString()

        ["", "-glfw", "-jemalloc", "-openal", "-opengl", "-stb"].each {
            implementation "org.lwjgl:lwjgl$it:$lwjgl_version"
            implementation "org.lwjgl:lwjgl$it:$lwjgl_version:natives-$lwjgl_natives"
        }
    }

    test.useJUnitPlatform()
}

project(":glm-test") {

    dependencies {
        implementation project(":glm")

        implementation "io.kotlintest:kotlintest-core:$kotlintest_version".toString()
        implementation "io.kotlintest:kotlintest-assertions:$kotlintest_version".toString()
    }
}