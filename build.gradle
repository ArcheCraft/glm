import static org.gradle.internal.os.OperatingSystem.*

buildscript {

    ext {
        kotlin = 'org.jetbrains.kotlin:kotlin'
        kotlin_version = '1.3.70'
        kotlintest_version = "3.4.2"
    }

    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "$kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
    }
}

group = 'com.github.kotlin_graphics'

plugins {
    id 'kotlin-multiplatform' version '1.3.21' apply false
}

ext {
    moduleName = "${group}.glm"
    unsigned_version = '2b60945e2c17f1e20b1ee6c96f1695d0df06eed7'
    kool_version = '2bf4b991f361a386a08762f3203d5b8ba26cd5fa'
    lwjgl_version = "3.2.3"
    lwjgl_natives = current() == WINDOWS ? "windows" : current() == LINUX ? "linux" : "macos"
}

subprojects {

    apply plugin: 'com.github.johnrengelman.shadow'

    // jitpack
    group = 'com.github.kotlin-graphics'

    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://jitpack.io" }
    }

//    task sourcesJar(type: Jar, dependsOn: classes) {
//        archiveClassifier = 'sources'
//        from sourceSets.main.allSource
//    }

//    task javadocJar(type: Jar, dependsOn: javadoc) {
//        archiveClassifier = 'javadoc'
//        from javadoc.destinationDir
//    }

//    artifacts {
//        archives sourcesJar
//        archives javadocJar
//    }

//    jar {
//        inputs.property("moduleName", moduleName)
//        manifest.attributes('Automatic-Module-Name': moduleName)
//    }
}

project(":glm") {
    apply plugin: 'kotlin-multiplatform'

    kotlin {
        jvm() {
            compilations.main {
                defaultSourceSet {
                    kotlin.srcDir("src/main/kotlin")
                    resources.srcDir("src/main/resources")

                    dependencies {
                        implementation kotlin("stdlib-jdk8")

                        api "com.github.kotlin-graphics:kotlin-unsigned:$unsigned_version".toString()
                        api "com.github.kotlin-graphics:kool:$kool_version".toString()

                        ["", "-glfw", "-jemalloc", "-openal", "-opengl", "-stb"].each {
                            implementation "org.lwjgl:lwjgl$it:$lwjgl_version"
                            implementation "org.lwjgl:lwjgl$it:$lwjgl_version:natives-$lwjgl_natives"
                        }
                    }
                }
            }
            compilations.test {
                defaultSourceSet {
                    kotlin.srcDir("src/test/kotlin")
                    resources.srcDir("src/test/resources")

                    dependencies {
                        implementation kotlin("test")
                        implementation kotlin("test-junit")

                        implementation project(":glm-test")

                        implementation "io.kotlintest:kotlintest-runner-junit5:$kotlintest_version".toString()
                    }
                }
            }
        }
    }

//    shadowJar.archiveClassifier = 'all'
}

project(":glm-test") {
    apply plugin: 'kotlin'

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib"

        testImplementation "io.kotlintest:kotlintest-runner-junit5:$kotlintest_version".toString()

        implementation project(":glm")

        implementation "io.kotlintest:kotlintest-core:$kotlintest_version"
        implementation "io.kotlintest:kotlintest-assertions:$kotlintest_version"
    }
}

